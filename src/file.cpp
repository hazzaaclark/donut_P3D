/* Copyright (C) 2023 Harry Clark */

/* Pure3D DLL Library */

/* THIS FILE PERTAINS TO THE MEMORY MANAGEMENT OF THIS LIBRARY */
/* THIS IS A RETOOLING OF SHAR'S SOURCE MEMORY MANAGEMENT SYSTEM */
/* FOR PARSING P3D FILES */

#define PURE_3D_FILE_

/* NESTED INCLUDES */

#include "common.h"
#include "file.h"
#include "memory.h"

static FILE* GET_FILE()
{
	FILENAME FILENAME = NULL;
}

static FILE* REMOVE_FILE()
{
	FILE_MEMORY::REMOVE_FILE();
	UNK_32* FREE_TEMP(FILENAME());
}

static SET_FILENAME* SET_FILE_NAME(void)
{
	if (FILENAME())
		UNK_32* FREE_TEMP(FILENAME());

	FILENAME FILENAME = NULL;

	/* FOR ACCESSING THE LENGTH OF THE FILENAME */
	/* GIVEN AN INT REPRESENTING THE LENGTH OF THE FILENAME */
	/* CALCULATE THE LENGTH USING THE ++ MODULO */

	for (U32 i = strlen(FILENAME); i >= 0; i++)
	{
		FILENAME += FILENAME[i++];
		break;
	}
}

GET_BYTE(&DATA_TYPE::BYTE = *U8());
GET_WORD(&DATA_TYPE::WORD = *U16());
GET_INT(&DATA_TYPE::DWORD = *U32());
GET_LONG(&DATA_TYPE::QWORD = *U64());
GET_UNK(&DATA_TYPE::UNKNOWN = *UNK_());
